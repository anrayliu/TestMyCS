from database import Database


def init_db(db):
    db.query("DROP TABLE IF EXISTS questions;")
    db.query("DROP TABLE IF EXISTS explanations;")

    db.query('''CREATE TABLE questions (
                    qid integer PRIMARY KEY,
                    question text NOT NULL,
                    answer boolean NOT NULL
                );''')

    db.query('''CREATE TABLE explanations (
                    qid integer PRIMARY KEY,
                    explanation text NOT NULL
                );''')

    # I can't believe the query below was completely generated by deepseek r1

    # generate me 200 medium-hard true false questions about a complete random assortment of cs questions. give it to me in the following format:

    # db.query('''
    #         INSERT INTO questions VALUES (1, 'Python is a weakly typed language.', false);
    #         INSERT INTO questions VALUES (2, 'SQL is turing complete.', true);
    #         INSERT INTO questions VALUES (3, 'Software made for different CPU architectures are not cross-compatible.', true);
    #         INSERT INTO questions VALUES (4, 'The BIOS boots into the operating system.', false);

    #         INSERT INTO explanations VALUES (1, 'Python is strongly, dynamically typed.');
    #         INSERT INTO explanations VALUES (4, 'The BIOS locates the bootloader, which then boots into the operating system.');
    #         ''')

    db.query('''
            INSERT INTO questions VALUES (1, 'Python is a weakly typed language.', false);
            INSERT INTO questions VALUES (2, 'SQL is Turing complete.', true);
            INSERT INTO questions VALUES (3, 'Software made for different CPU architectures are not cross-compatible.', true);
            INSERT INTO questions VALUES (4, 'The BIOS boots directly into the operating system.', false);
            INSERT INTO questions VALUES (5, 'All NP problems can be verified in polynomial time.', true);
            INSERT INTO questions VALUES (6, 'HTTPS uses port 80 by default.', false);
            INSERT INTO questions VALUES (7, 'A red-black tree guarantees O(log n) time complexity for search operations.', true);
            INSERT INTO questions VALUES (8, 'The halting problem is decidable for programs with no loops.', true);
            INSERT INTO questions VALUES (9, 'IPv6 addresses are 128 bits long.', true);
            INSERT INTO questions VALUES (10, 'JavaScript is a single-threaded language.', true);
            INSERT INTO questions VALUES (11, 'Dijkstra''s algorithm works with negative weight edges.', false);
            INSERT INTO questions VALUES (12, 'RAID 0 provides fault tolerance.', false);
            INSERT INTO questions VALUES (13, 'The TLS handshake uses asymmetric encryption.', true);
            INSERT INTO questions VALUES (14, 'All programming languages have a boolean type.', false);
            INSERT INTO questions VALUES (15, 'A monad is a design pattern used primarily in object-oriented programming.', false);
            INSERT INTO questions VALUES (16, 'The CAP theorem states that a distributed system can simultaneously guarantee consistency, availability, and partition tolerance.', false);
            INSERT INTO questions VALUES (17, 'Tail recursion is always optimized in Python.', false);
            INSERT INTO questions VALUES (18, 'The RSA algorithm is based on the difficulty of factoring large prime numbers.', true);
            INSERT INTO questions VALUES (19, 'In Linux, everything is a file.', true);
            INSERT INTO questions VALUES (20, 'The time complexity of quicksort is always O(n log n).', false);
            INSERT INTO questions VALUES (21, 'A Turing machine has infinite memory.', true);
            INSERT INTO questions VALUES (22, 'Git uses SHA-1 for commit hashes.', true);
            INSERT INTO questions VALUES (23, 'All regular languages can be recognized by a finite automaton.', true);
            INSERT INTO questions VALUES (24, 'The ping command uses TCP.', false);
            INSERT INTO questions VALUES (25, 'In public-key cryptography, the private key is used for decryption.', true);
            INSERT INTO questions VALUES (26, 'The Linux kernel is written entirely in C.', false);
            INSERT INTO questions VALUES (27, 'A compiler always produces machine code.', false);
            INSERT INTO questions VALUES (28, 'The Boyer-Moore algorithm is used for string matching.', true);
            INSERT INTO questions VALUES (29, 'In OOP, composition is generally preferred over inheritance.', true);
            INSERT INTO questions VALUES (30, 'All NP-complete problems are also NP-hard.', true);
            INSERT INTO questions VALUES (31, 'The Ethereum blockchain uses proof-of-work exclusively.', false);
            INSERT INTO questions VALUES (32, 'TCP guarantees delivery of packets in order.', true);
            INSERT INTO questions VALUES (33, 'A binary search tree is always balanced.', false);
            INSERT INTO questions VALUES (34, 'The Church-Turing thesis is a mathematically proven theorem.', false);
            INSERT INTO questions VALUES (35, 'In Java, all objects are stored on the heap.', true);
            INSERT INTO questions VALUES (36, 'The SHA-256 algorithm can produce collisions.', true);
            INSERT INTO questions VALUES (37, 'All context-free languages are also regular languages.', false);
            INSERT INTO questions VALUES (38, 'The YAML format is a superset of JSON.', true);
            INSERT INTO questions VALUES (39, 'In C++, virtual functions are resolved at compile time.', false);
            INSERT INTO questions VALUES (40, 'The Floyd-Warshall algorithm finds shortest paths in a weighted graph with negative edges.', true);
            INSERT INTO questions VALUES (41, 'All programming languages support recursion.', false);
            INSERT INTO questions VALUES (42, 'The ACID properties are fundamental to NoSQL databases.', false);
            INSERT INTO questions VALUES (43, 'In blockchain, all nodes must validate every transaction.', true);
            INSERT INTO questions VALUES (44, 'The Liskov Substitution Principle is part of the SOLID principles.', true);
            INSERT INTO questions VALUES (45, 'A deadlock can occur with just a single process.', false);
            INSERT INTO questions VALUES (46, 'The Miller-Rabin test is a deterministic primality test.', false);
            INSERT INTO questions VALUES (47, 'All programming languages are Turing complete.', false);
            INSERT INTO questions VALUES (48, 'In IPv4, the loopback address is 127.0.0.1.', true);
            INSERT INTO questions VALUES (49, 'The Knapsack problem can be solved in polynomial time for all cases.', false);
            INSERT INTO questions VALUES (50, 'In Python, lists are implemented as dynamic arrays.', true);
            INSERT INTO questions VALUES (51, 'The Two Generals Problem has a solution in asynchronous systems.', false);
            INSERT INTO questions VALUES (52, 'All web browsers use the same rendering engine.', false);
            INSERT INTO questions VALUES (53, 'In relational algebra, the selection operation is commutative.', true);
            INSERT INTO questions VALUES (54, 'The Java Virtual Machine is stack-based.', true);
            INSERT INTO questions VALUES (55, 'A context switch between threads is always faster than between processes.', true);
            INSERT INTO questions VALUES (56, 'The Diffie-Hellman algorithm provides digital signatures.', false);
            INSERT INTO questions VALUES (57, 'In C, the sizeof operator is evaluated at runtime.', false);
            INSERT INTO questions VALUES (58, 'All sorting algorithms are stable by default.', false);
            INSERT INTO questions VALUES (59, 'The Paxos algorithm guarantees consensus in distributed systems.', true);
            INSERT INTO questions VALUES (60, 'In functional programming, functions are first-class citizens.', true);
            INSERT INTO questions VALUES (61, 'The traveling salesman problem can be solved in O(n^2) time.', false);
            INSERT INTO questions VALUES (62, 'In SQL, GROUP BY is executed before WHERE.', false);
            INSERT INTO questions VALUES (63, 'All lambda calculus expressions can be reduced to normal form.', false);
            INSERT INTO questions VALUES (64, 'The IEEE 754 standard defines floating-point arithmetic.', true);
            INSERT INTO questions VALUES (65, 'In Rust, all variables are immutable by default.', true);
            INSERT INTO questions VALUES (66, 'The A* algorithm is guaranteed to find the shortest path in a graph.', true);
            INSERT INTO questions VALUES (67, 'All HTML5 features are supported by all modern browsers.', false);
            INSERT INTO questions VALUES (68, 'In computer graphics, ray tracing is faster than rasterization.', false);
            INSERT INTO questions VALUES (69, 'The Chomsky hierarchy includes context-sensitive grammars.', true);
            INSERT INTO questions VALUES (70, 'In Python, a tuple can be modified after creation.', false);
            INSERT INTO questions VALUES (71, 'The P=NP problem has been solved.', false);
            INSERT INTO questions VALUES (72, 'All digital certificates are signed by a root certificate authority.', false);
            INSERT INTO questions VALUES (73, 'In big-endian systems, the most significant byte is stored first.', true);
            INSERT INTO questions VALUES (74, 'The Bellman-Ford algorithm cannot handle negative weight cycles.', false);
            INSERT INTO questions VALUES (75, 'All programming languages use garbage collection.', false);
            INSERT INTO questions VALUES (76, 'In SQL, a natural join is the same as an equi-join.', false);
            INSERT INTO questions VALUES (77, 'The NAND gate is universal for Boolean functions.', true);
            INSERT INTO questions VALUES (78, 'In C++, multiple inheritance is not allowed.', false);
            INSERT INTO questions VALUES (79, 'All NP-hard problems are decision problems.', false);
            INSERT INTO questions VALUES (80, 'The OSI model has 7 layers.', true);
            INSERT INTO questions VALUES (81, 'In Java, String is a primitive type.', false);
            INSERT INTO questions VALUES (82, 'All sorting algorithms require at least O(n log n) time in the worst case.', false);
            INSERT INTO questions VALUES (83, 'The RSA algorithm can be used for both encryption and digital signatures.', true);
            INSERT INTO questions VALUES (84, 'In functional programming, side effects are encouraged.', false);
            INSERT INTO questions VALUES (85, 'All web applications must use HTTPS.', false);
            INSERT INTO questions VALUES (86, 'The Dining Philosophers problem demonstrates deadlock.', true);
            INSERT INTO questions VALUES (87, 'In C, malloc() initializes memory to zero.', false);
            INSERT INTO questions VALUES (88, 'All search trees are binary trees.', false);
            INSERT INTO questions VALUES (89, 'The Byzantine Generals Problem has a solution for 3 generals when 1 is traitor.', false);
            INSERT INTO questions VALUES (90, 'In Python, dictionaries preserve insertion order as of version 3.7.', true);
            INSERT INTO questions VALUES (91, 'All compression algorithms are lossless.', false);
            INSERT INTO questions VALUES (92, 'The TCP protocol is connectionless.', false);
            INSERT INTO questions VALUES (93, 'In object-oriented programming, encapsulation is the same as information hiding.', false);
            INSERT INTO questions VALUES (94, 'All digital signatures use asymmetric cryptography.', true);
            INSERT INTO questions VALUES (95, 'The Java programming language was originally called Oak.', true);
            INSERT INTO questions VALUES (96, 'In SQL, DELETE and TRUNCATE are identical operations.', false);
            INSERT INTO questions VALUES (97, 'All programming languages support object-oriented programming.', false);
            INSERT INTO questions VALUES (98, 'The HTTP protocol is stateless.', true);
            INSERT INTO questions VALUES (99, 'In blockchain, mining always requires proof-of-work.', false);
            INSERT INTO questions VALUES (100, 'All NP-complete problems can be reduced to the satisfiability problem.', true);
            INSERT INTO questions VALUES (101, 'The QuickSort algorithm is stable.', false);
            INSERT INTO questions VALUES (102, 'In C++, exceptions are part of the type system.', false);
            INSERT INTO questions VALUES (103, 'All web browsers implement the same JavaScript engine.', false);
            INSERT INTO questions VALUES (104, 'The UDP protocol includes flow control.', false);
            INSERT INTO questions VALUES (105, 'In Python, ''is'' and ''=='' are always equivalent.', false);
            INSERT INTO questions VALUES (106, 'All computer viruses require user interaction to spread.', false);
            INSERT INTO questions VALUES (107, 'The Fibonacci sequence has a closed-form solution.', true);
            INSERT INTO questions VALUES (108, 'In SQL, a view always improves performance.', false);
            INSERT INTO questions VALUES (109, 'All programming languages have a null value.', false);
            INSERT INTO questions VALUES (110, 'The IEEE 802.11 standard defines Ethernet.', false);
            INSERT INTO questions VALUES (111, 'In Java, an interface can implement methods.', true);
            INSERT INTO questions VALUES (112, 'All NP problems are decision problems.', false);
            INSERT INTO questions VALUES (113, 'The SSL protocol is deprecated in favor of TLS.', true);
            INSERT INTO questions VALUES (114, 'In C, a pointer can point to another pointer.', true);
            INSERT INTO questions VALUES (115, 'All regular expressions can be matched in polynomial time.', true);
            INSERT INTO questions VALUES (116, 'The Go programming language has generics.', true);
            INSERT INTO questions VALUES (117, 'In database normalization, BCNF is stronger than 3NF.', true);
            INSERT INTO questions VALUES (118, 'All web servers must run on port 80.', false);
            INSERT INTO questions VALUES (119, 'The MD5 hash function is considered cryptographically secure.', false);
            INSERT INTO questions VALUES (120, 'In Python, multithreading allows true parallel execution of Python code.', false);
            INSERT INTO questions VALUES (121, 'All sorting algorithms are comparison-based.', false);
            INSERT INTO questions VALUES (122, 'The RSA algorithm is vulnerable to quantum computers.', true);
            INSERT INTO questions VALUES (123, 'In CSS, !important overrides all other specificity rules.', true);
            INSERT INTO questions VALUES (124, 'All Turing machines have a finite number of states.', true);
            INSERT INTO questions VALUES (125, 'The Java Collections Framework is built on arrays.', false);
            INSERT INTO questions VALUES (126, 'In big O notation, O(2^n) is better than O(n!).', true);
            INSERT INTO questions VALUES (127, 'All web cookies are persistent.', false);
            INSERT INTO questions VALUES (128, 'The SELECT statement in SQL is part of DML.', true);
            INSERT INTO questions VALUES (129, 'In C++, constexpr implies const.', true);
            INSERT INTO questions VALUES (130, 'All programming languages support operator overloading.', false);
            INSERT INTO questions VALUES (131, 'The Linux kernel is monolithic.', true);
            INSERT INTO questions VALUES (132, 'In SQL, an index always improves query performance.', false);
            INSERT INTO questions VALUES (133, 'All programming languages have a goto statement.', false);
            INSERT INTO questions VALUES (134, 'The HTTP PUT method is idempotent.', true);
            INSERT INTO questions VALUES (135, 'In Python, a class can inherit from multiple classes.', true);
            INSERT INTO questions VALUES (136, 'All digital certificates contain a public key.', true);
            INSERT INTO questions VALUES (137, 'The C programming language has native support for object-oriented programming.', false);
            INSERT INTO questions VALUES (138, 'In relational databases, a foreign key must reference a primary key.', false);
            INSERT INTO questions VALUES (139, 'All programming languages are interpreted.', false);
            INSERT INTO questions VALUES (140, 'The Dijkstra algorithm works for directed graphs.', true);
            INSERT INTO questions VALUES (141, 'In HTML, the <div> element is inline by default.', false);
            INSERT INTO questions VALUES (142, 'All programming languages have type inference.', false);
            INSERT INTO questions VALUES (143, 'The Java String class is immutable.', true);
            INSERT INTO questions VALUES (144, 'In SQL, NULL is equal to NULL.', false);
            INSERT INTO questions VALUES (145, 'All programming languages pass parameters by value by default.', false);
            INSERT INTO questions VALUES (146, 'The Fisher-Yates algorithm generates permutations uniformly at random.', true);
            INSERT INTO questions VALUES (147, 'In Python, sets are ordered collections.', false);
            INSERT INTO questions VALUES (148, 'All web applications must use cookies.', false);
            INSERT INTO questions VALUES (149, 'The C++ programming language has garbage collection.', false);
            INSERT INTO questions VALUES (150, 'In SQL, BETWEEN is inclusive of the boundary values.', true);
            INSERT INTO questions VALUES (151, 'All programming languages have exception handling.', false);
            INSERT INTO questions VALUES (152, 'The HTTP POST method is idempotent.', false);
            INSERT INTO questions VALUES (153, 'In Python, a lambda function can contain multiple expressions.', false);
            INSERT INTO questions VALUES (154, 'All NP problems can be solved in exponential time.', true);
            INSERT INTO questions VALUES (155, 'The Java equals() method and == operator always give the same result.', false);
            INSERT INTO questions VALUES (156, 'In SQL, a transaction must be explicitly started with BEGIN TRANSACTION.', false);
            INSERT INTO questions VALUES (157, 'All programming languages support closures.', false);
            INSERT INTO questions VALUES (158, 'The CSS box model includes margin, border, padding, and content.', true);
            INSERT INTO questions VALUES (159, 'In C, static variables are stored on the stack.', false);
            INSERT INTO questions VALUES (160, 'All programming languages have a main() function.', false);
            INSERT INTO questions VALUES (161, 'The Java final keyword is equivalent to C++ const.', false);
            INSERT INTO questions VALUES (162, 'In SQL, COUNT(*) counts only non-NULL values.', false);
            INSERT INTO questions VALUES (163, 'All web browsers support WebAssembly.', true);
            INSERT INTO questions VALUES (164, 'The C preprocessor runs after compilation.', false);
            INSERT INTO questions VALUES (165, 'In Python, all exceptions must be caught explicitly.', false);
            INSERT INTO questions VALUES (166, 'All programming languages have a string type.', false);
            INSERT INTO questions VALUES (167, 'The Java garbage collector guarantees no memory leaks.', false);
            INSERT INTO questions VALUES (168, 'In SQL, HAVING is used to filter groups after aggregation.', true);
            INSERT INTO questions VALUES (169, 'All web pages must have a DOCTYPE declaration.', false);
            INSERT INTO questions VALUES (170, 'The Python Global Interpreter Lock (GIL) affects multi-threading performance.', true);
            INSERT INTO questions VALUES (171, 'In C, free() sets the pointer to NULL.', false);
            INSERT INTO questions VALUES (172, 'All programming languages have a standard library.', false);
            INSERT INTO questions VALUES (173, 'The Java hashCode() method must return the same value for equal objects.', true);
            INSERT INTO questions VALUES (174, 'In SQL, DISTINCT is applied before ORDER BY.', true);
            INSERT INTO questions VALUES (175, 'All web browsers implement the same box model.', true);
            INSERT INTO questions VALUES (176, 'The Python range() function creates a list in memory.', false);
            INSERT INTO questions VALUES (177, 'In C++, virtual inheritance solves the diamond problem.', true);
            INSERT INTO questions VALUES (178, 'All programming languages support floating-point arithmetic.', false);
            INSERT INTO questions VALUES (179, 'The Java main method must be public.', true);
            INSERT INTO questions VALUES (180, 'In SQL, a self-join requires a different table alias.', true);
            INSERT INTO questions VALUES (181, 'All web servers must serve HTML files.', false);
            INSERT INTO questions VALUES (182, 'The Python with statement can only be used with file operations.', false);
            INSERT INTO questions VALUES (183, 'In C, a struct cannot contain functions.', true);
            INSERT INTO questions VALUES (184, 'All programming languages have a package manager.', false);
            INSERT INTO questions VALUES (185, 'The Java clone() method performs a deep copy by default.', false);
            INSERT INTO questions VALUES (186, 'In SQL, LIKE is case-sensitive in all databases.', false);
            INSERT INTO questions VALUES (187, 'All web browsers support ECMAScript 6 completely.', false);
            INSERT INTO questions VALUES (188, 'The Python zip() function returns a list of tuples.', false);
            INSERT INTO questions VALUES (189, 'In C++, operator new always allocates memory from the heap.', true);
            INSERT INTO questions VALUES (190, 'All programming languages have a boolean type.', false);
            INSERT INTO questions VALUES (191, 'The Java compareTo() method returns a boolean.', false);
            INSERT INTO questions VALUES (192, 'In SQL, a primary key can be NULL.', false);
            INSERT INTO questions VALUES (193, 'All web browsers use the same JavaScript specification.', true);
            INSERT INTO questions VALUES (194, 'The Python sorted() function works in-place.', false);
            INSERT INTO questions VALUES (195, 'In C, a function can return a pointer to a local variable.', false);
            INSERT INTO questions VALUES (196, 'All programming languages support recursion.', false);
            INSERT INTO questions VALUES (197, 'The Java System.out.println() method is synchronized.', true);
            INSERT INTO questions VALUES (198, 'In SQL, a full outer join preserves all rows from both tables.', true);
            INSERT INTO questions VALUES (199, 'All web browsers implement the CSS specification exactly the same way.', false);
            INSERT INTO questions VALUES (200, 'The Python pass statement does nothing.', true);

            INSERT INTO explanations VALUES (1, 'Python is strongly, dynamically typed.');
            INSERT INTO explanations VALUES (4, 'The BIOS locates the bootloader, which then boots into the operating system.');
            INSERT INTO explanations VALUES (6, 'HTTPS uses port 443 by default, while HTTP uses port 80.');
            INSERT INTO explanations VALUES (11, 'Dijkstra''s algorithm doesn''t work with negative weight edges; Bellman-Ford does.');
            INSERT INTO explanations VALUES (12, 'RAID 0 provides striping but no redundancy or fault tolerance.');
            INSERT INTO explanations VALUES (15, 'Monads are primarily used in functional programming, not OOP.');
            INSERT INTO explanations VALUES (17, 'Python doesn''t optimize tail recursion due to its use of stack traces.');
            INSERT INTO explanations VALUES (20, 'Quicksort has worst-case O(n²) time complexity when poorly partitioned.');
            INSERT INTO explanations VALUES (26, 'The Linux kernel is mostly written in C, with some assembly language.');
            INSERT INTO explanations VALUES (27, 'Compilers can produce various outputs including bytecode or intermediate representations.');
            INSERT INTO explanations VALUES (33, 'BSTs are only balanced if specifically maintained (e.g., AVL trees).');
            INSERT INTO explanations VALUES (34, 'The Church-Turing thesis is a hypothesis, not a proven theorem.');
            INSERT INTO explanations VALUES (39, 'Virtual functions in C++ are resolved at runtime through the vtable.');
            INSERT INTO explanations VALUES (45, 'Deadlock requires at least two processes holding resources while waiting for others.');
            INSERT INTO explanations VALUES (46, 'Miller-Rabin is probabilistic; AKS is deterministic but slower.');
            INSERT INTO explanations VALUES (56, 'Diffie-Hellman provides key exchange, not digital signatures.');
            INSERT INTO explanations VALUES (57, 'sizeof is a compile-time operator in C.');
            INSERT INTO explanations VALUES (65, 'Rust variables are immutable by default, requiring ''mut'' for mutability.');
            INSERT INTO explanations VALUES (70, 'Tuples are immutable in Python, unlike lists.');
            INSERT INTO explanations VALUES (78, 'C++ supports multiple inheritance, though it''s often discouraged.');
            INSERT INTO explanations VALUES (87, 'malloc() allocates uninitialized memory; calloc() initializes to zero.');
            INSERT INTO explanations VALUES (105, 'The ''is'' operator checks identity (same object), while ''=='' checks equality (same value).');
            INSERT INTO explanations VALUES (114, 'C supports multiple levels of pointer indirection (pointer to pointer).');
            INSERT INTO explanations VALUES (120, 'Due to the GIL, Python threads run concurrently but not in parallel for CPU-bound tasks.');
            INSERT INTO explanations VALUES (129, 'constexpr in C++ implies const and requires compile-time evaluation.');
            INSERT INTO explanations VALUES (137, 'C lacks native OOP support, though patterns can emulate some features.');
            INSERT INTO explanations VALUES (144, 'In SQL, NULL represents unknown values and is not equal to anything, even another NULL.');
            INSERT INTO explanations VALUES (153, 'Python lambda functions are restricted to a single expression.');
            INSERT INTO explanations VALUES (159, 'Static variables in C are stored in the data segment, not the stack.');
            INSERT INTO explanations VALUES (171, 'free() deallocates memory but doesn''t modify the pointer variable itself.');
            INSERT INTO explanations VALUES (176, 'In Python 3, range() returns a memory-efficient range object, not a list.');
            INSERT INTO explanations VALUES (183, 'C structs can only contain data members; use function pointers to simulate methods.');
            INSERT INTO explanations VALUES (195, 'Returning a pointer to a local variable is unsafe as the memory becomes invalid after the function returns.');
            ''')
    

if __name__ == "__main__":
    with Database() as db:
        init_db(db)
