services:
  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    ports:
    - ${APP_PORT}:${APP_PORT}
    volumes:
      - dbdata:/var/lib/postgresql/data
    env_file: .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      APP_PORT: ${APP_PORT}
    depends_on:
      - db
    restart: on-failure:10

  db:
    image: postgres:17-alpine
    ports:
    - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

#  dbinit:
#    build:
#      context: .
#      dockerfile: ./docker/initdb/Dockerfile
#    env_file: .env
#    environment:
#      DB_USER: ${DB_USER}
#      DB_PASSWORD: ${DB_PASSWORD}
#      DB_PORT: ${DB_PORT}
#      DB_NAME: ${DB_NAME}
#      DB_HOST: ${DB_HOST}
#    depends_on:
#      - db
#    restart: on-failure:10

  tunnel:
    image: cloudflare/cloudflared
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN}
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TOKEN}
    depends_on:
      - proxy

  proxy:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static/:/app-static/
    depends_on:
      - app

volumes:
  dbdata:
